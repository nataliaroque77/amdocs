{"version":3,"sources":["_login/PrivateRoute.js","_login/auth.service.js","_login/Login.js","_search/ResultList.js","_search/Search.js","App.js","index.js"],"names":["PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","authService","login","username","credential","options","method","headers","Content-Type","body","JSON","stringify","credentials","fetch","then","response","ok","Promise","reject","json","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","submitted","loading","error","handleChange","bind","assertThisInitialized","handleSubmit","e","_e$target","target","name","value","setState","defineProperty","_this2","preventDefault","_this$state","path","from","location","pathname","history","push","_this$state2","className","onSubmit","htmlFor","type","onChange","disabled","React","ResultList","results","length","query","map","result","index","key","displayName","status","aria-label","href","Search","onSearchChange","searchText","doSearch","currentTarget","reset","url","concat","responseData","catch","ref","input","placeholder","id","_search_ResultList","App","react_router_dom","PrivateRoute_PrivateRoute","exact","to","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a37d2404.chunk.js","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n         <Component {...props} />\n    )} />\n);\n","\nfunction login(username, credential) {\n    const url = `http://3.122.7.162:5000/v60/admin/session`;\n    const options = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({username, credential}),\n        credentials: 'include'\n    };\n\n    return fetch(url, options)\n        .then(response => {\n            if(!response.ok) {\n                return Promise.reject('Please contact the System Administrator at extension 1001 to create a new Login or reset your password.');\n            }\n            return response;\n        })\n        .then(response => response.json());\n}\n\nexport const authService = {\n    login\n};\n","import React from 'react';\n\nimport { authService } from './auth.service';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            credential: '',\n            submitted: false,\n            loading: false,\n            error: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        this.setState({\n            submitted: true\n        });\n        const { username, credential } = this.state;\n\n        if (!(username && credential)) {\n            return;\n        }\n\n        this.setState({\n            loading: true\n        });\n\n        authService.login(username, credential)\n            .then(\n                path => {\n                    const { from } = this.props.location.state || { from: { pathname: \"/search\" } };\n                    this.props.history.push(from);\n                },\n                error => this.setState({ error, loading: false })\n            );\n    }\n\n    render() {\n        const { username, credential, submitted, loading, error } = this.state;\n\n        return (\n            <div className=\"section-centered session\">\n                    <div className=\"card\">\n                        <h2>Login</h2>\n                        <form name=\"form\" onSubmit={this.handleSubmit}>\n                            <div className={'form-group' + (submitted && !username ? ' has-error' : '')}>\n                                <label htmlFor=\"username\" className=\"accesiblity-text\">Username</label>\n                                <input type=\"text\"\n                                       className=\"form-control\"\n                                       name=\"username\"\n                                       value={username}\n                                       onChange={this.handleChange} />\n                                {submitted && !username &&\n                                <div className=\"help-block\">Username is required</div>\n                                }\n                            </div>\n                            <div className={'form-group' + (submitted && !credential ? ' has-error' : '')}>\n                                <label htmlFor=\"credential\" className=\"accesiblity-text\">credential</label>\n                                <input\n                                    type=\"credential\"\n                                    className=\"form-control\"\n                                    name=\"credential\"\n                                    value={credential}\n                                    onChange={this.handleChange} />\n                                {submitted && !credential &&\n                                <div className=\"help-block\">Credential is required</div>\n                                }\n                            </div>\n                            <div className=\"actions-section\">\n                                <button\n                                    className=\"btn btn-primary\"\n                                    disabled={loading}>Login</button>\n                            </div>\n                            {error && <div className={'alert alert-danger'}>{error}</div>}\n                        </form>\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport { Login };\n","import React from 'react';\n\nconst ResultList = props => {\n    return (\n        <div>\n            { props.results.length > 0 &&\n                <div className=\"container\">\n                    <div className=\"card\">\n                        <div className=\"search-results-section\">\n                            <h2>\n                                <span>Search results for: </span> {props.query}\n                            </h2>\n                            <h3>Users</h3>\n                            <div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <thead>\n                                    <tr>\n                                        <th>Username</th>\n                                        <th>Name</th>\n                                        <th>Status</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {props.results.map((result, index) =>\n                                        <tr key={index}>\n                                            <td>\n                                                {result.username}\n                                            </td>\n                                            <td className=\"text-center\">\n                                                {result.displayName}\n                                            </td>\n                                            <td>\n                                                {result.status}\n                                            </td>\n                                        </tr>\n                                    )}\n                                    </tbody>\n                                </table>\n                            </div>\n                            <nav aria-label=\"Search pagination\">\n                                <ul className=\"pagination\">\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"/\">Previous</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"/\">1</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"/\">2</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"/\">3</a></li>\n                                    <li className=\"page-item\"><a className=\"page-link\" href=\"/\">Next</a></li>\n                                </ul>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default ResultList;\n","import React from 'react';\nimport ResultList from './ResultList';\n\nclass Search extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            searchText: '',\n            results: []\n        };\n    }\n\n    componentDidMount() {\n        this.doSearch();\n    }\n\n    onSearchChange = e => {\n        this.setState({\n            searchText: e.target.value\n        });\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.doSearch(this.query.value);\n        e.currentTarget.reset();\n    };\n\n\n    doSearch = (query) => {\n        const url = `http://3.122.7.162:5000/v60/admin/search/user?keyword=${query}&alias=false`;\n        const options = {\n            credentials: 'include',\n        };\n\n        fetch(url, options)\n            .then(response => response.json())\n            .then(responseData => {\n                this.setState({\n                    results: responseData\n                });\n            })\n            .catch(error => {\n                //console.log('Error - fetching data', error);\n            });\n    };\n\n    render() {\n        return (\n            <div className=\"dashboard\">\n                <div className=\"container\">\n                    <div className=\"card\">\n                        <div className=\"search-section\">\n                            <form className=\"search-form\" onSubmit={this.handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"search\">Search User</label>\n                                    <input type=\"search\"\n                                           onChange={this.onSearchChange}\n                                           name=\"search\"\n                                           ref={(input) => this.query = input}\n                                           placeholder=\"Search...\"\n                                           className=\"form-control\"/>\n                                </div>\n                                <button className=\"btn btn-default\" type=\"submit\" id=\"submit\">Search</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <ResultList results={this.state.results} query={this.state.searchText}/>\n            </div>\n        );\n    }\n}\n\nexport { Search };\n\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { PrivateRoute } from './_login/PrivateRoute';\nimport { Login } from './_login/Login';\nimport { Search } from './_search/Search';\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Router>\n                    <PrivateRoute path=\"/search\" component={Search} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Redirect from=\"/\" to=\"/login\" />\n            </Router>\n        );\n    }\n}\nexport { App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { App } from './App';\nimport './styles.scss'\n\nrender(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}